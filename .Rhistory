nrow(feats_poetry25)
feats_poetry25 <- readRDS("C:/Users/Hege/Opiskelu/Kurssit/Gradu/feats_poetry_whole_title_alt_25_20170802.RDS")
length(responses_hc_prevails)
unique(responses_hc_prevails)
responses_hc_prevails <- readRDS(paste0(bu_path, "/responses_hc_prevails.RDS"))
feats_poetry25 <- which(!is.na(as.character(responses_hc_prevails)))
length(feats_poetry25)
nrow(feats_poetry25)
feats_poetry25 <- feats_poetry25[which(!is.na(as.character(responses_hc_prevails))),]
feats_poetry25 <- readRDS("C:/Users/Hege/Opiskelu/Kurssit/Gradu/feats_poetry_whole_title_alt_25_20170802.RDS")
feats_poetry25 <- feats_poetry25[which(!is.na(as.character(responses_hc_prevails))),]
nrow(feats_poetry25)
length(feats_poetry25)
feats_poetry25$is_poetry <- as.factor(responses_hc_prevails)
qqq <- run_rf_once(df=df, features=feats_poetry25, filenamestem="poetry25_hc_prevails_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
df_mod <- df[which(!is.na(responses_hc_prevails)),]
nrow(df_mod)
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_hc_prevails_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
source('~/GitHub/Gradu/run_rf.R')
source("run_rf_once.R")
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_hc_prevails_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
source('~/GitHub/Gradu/run_rf.R')
source("run_rf_once.R")
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_hc_prevails_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
source('~/GitHub/Gradu/run_rf.R')
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_hc_prevails_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
source("run_rf_once.R")
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_hc_prevails_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
source('~/GitHub/Gradu/run_rf.R')
source("run_rf_once.R")
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_hc_prevails_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
source('~/GitHub/Gradu/run_rf.R')
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_hc_prevails_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
source("run_rf_once.R")
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_hc_prevails_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
source('~/GitHub/Gradu/run_rf.R')
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_hc_prevails_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
source("run_rf_once.R")
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_hc_prevails_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
source('~/GitHub/Gradu/run_rf.R')
source("run_rf_once.R")
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_hc_prevails_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
dev.off()
sink()
source('~/GitHub/Gradu/run_rf.R')
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_hc_prevails_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
source("run_rf_once.R")
sink()
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_hc_prevails_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
source('~/GitHub/Gradu/run_rf.R')
source("run_rf_once.R")
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_hc_prevails_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
unique(df_mod$is_poetry)
unique(feats_poetry25$is_poetry)
feats_poetry25$is_poetry <- as.factor(responses_hc_prevails)
responses_hc_prevails <- readRDS(paste0(bu_path, "/responses_hc_prevails.RDS"))
feats_poetry25 <- readRDS("C:/Users/Hege/Opiskelu/Kurssit/Gradu/feats_poetry_whole_title_alt_25_20170802.RDS")
feats_poetry25 <- feats_poetry25[which(!is.na(as.character(responses_hc_prevails))),]
feats_poetry25$is_poetry <- as.factor(responses_hc_prevails)
unique(responses_hc_prevails)
responses_hc_prevails <- readRDS(paste0(bu_path, "/responses_hc_prevails.RDS"))
feats_poetry25 <- readRDS("C:/Users/Hege/Opiskelu/Kurssit/Gradu/feats_poetry_whole_title_alt_25_20170802.RDS")
feats_poetry25 <- feats_poetry25[which(!is.na(as.character(responses_hc_prevails))),]
feats_poetry25$is_poetry <- as.factor(responses_hc_prevails)
df_mod <- df[which(!is.na(responses_hc_prevails)),]
responses_hc_prevails <- responses_hc_prevails[which(!is.na(as.character(responses_hc_prevails))),]
responses_hc_prevails <- readRDS(paste0(bu_path, "/responses_hc_prevails.RDS"))
feats_poetry25 <- readRDS("C:/Users/Hege/Opiskelu/Kurssit/Gradu/feats_poetry_whole_title_alt_25_20170802.RDS")
feats_poetry25 <- feats_poetry25[which(!is.na(as.character(responses_hc_prevails))),]
responses_hc_prevails <- readRDS(paste0(bu_path, "/responses_hc_prevails.RDS"))
feats_poetry25 <- readRDS("C:/Users/Hege/Opiskelu/Kurssit/Gradu/feats_poetry_whole_title_alt_25_20170802.RDS")
feats_poetry25$is_poetry <- as.factor(responses_hc_prevails)
feats_poetry25 <- feats_poetry25[which(!is.na(as.character(responses_hc_prevails))),]
df_mod <- df[which(!is.na(responses_hc_prevails)),]
responses_hc_prevails <- responses_hc_prevails[which(!is.na(as.character(responses_hc_prevails))),]
responses_hc_prevails <- responses_hc_prevails[which(!is.na(as.character(responses_hc_prevails)))]
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_hc_prevails_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
feats_poetry25$is_poetry <- feats_poetry_title_only300$is_poetry
feats_poetry25 <- readRDS("C:/Users/Hege/Opiskelu/Kurssit/Gradu/feats_poetry_whole_title_alt_25_20170802.RDS")
feats_poetry25$is_poetry <- feats_poetry_title_only300$is_poetry
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_two_responses_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
debugSource('~/GitHub/Gradu/run_rf.R')
feats_poetry25 <- feats_poetry25[which(!is.na(as.character(responses_hc_prevails))),]
feats_poetry25$is_poetry <- responses_hc_prevails
debugSource('~/GitHub/Gradu/run_rf_once.R')
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_two_responses_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
feats_poetry25$is_poetry <- as.factor(responses_hc_prevails)
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_two_responses_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
matrices_no_cutoff[1]
matrices_no_cutoff[1][1]
unlist(matrices_no_cutoff[1])
unlist(matrices_no_cutoff[1])[1]
unlist(matrices_no_cutoff[1])[2]
unlist(matrices_no_cutoff[1])[3]
unlist(matrices_no_cutoff[2])[3]
unlist(matrices_no_cutoff[1])
data.frame(unlist(matrices_no_cutoff[1]))
names((unlist(matrices_no_cutoff[1])))
names(cm_no_cutoff
)
cm_no_cutoff
cm_no_cutoff$positive
cm_no_cutoff$table
data.frame(unlist(matrices_no_cutoff[5]))
names(cm_no_cutoff$table)
cm_no_cutoff$overall
cm_no_cutoff$byClass
names(cm_no_cutoff$byClass)
cm_no_cutoff$byClass[1]
row.names(cm_no_cutoff$byClass)
col.names(cm_no_cutoff$byClass)
colnames(cm_no_cutoff$byClass)
colnames(cm_no_cutoff$table)
cm_no_cutoff$overall
colnames(cm_no_cutoff$overall)
names(cm_no_cutoff$overall)
row.names(cm_no_cutoff$byClass)
colnames(cm_no_cutoff$byClass)
tolower("Hege")
i <- 1
all_names <- rep(character, nrow(unlist(cm_no_cutoff)))
all_names <- rep("", nrow(unlist(cm_no_cutoff)))
all_names <- rep(nrow(unlist(cm_no_cutoff)), "")
all_names
rep(" ", 2)
rep("Hege on tyhmÃ¤", 2)
nrow(unlist(cm_no_cutoff))
length(unlist(cm_no_cutoff))
all_names <- rep("", length(unlist(cm_no_cutoff)))
all_names
for (name in names(cm_no_cutoff$overall)) {
all_names[i] <- name
i <- i + 1
}
i
i <- i + 1
i <- 1
for (name in names(cm_no_cutoff$overall)) {
all_names[i] <- name
i <- i + 1
}
all_names
for (name in names(cm_no_cutoff$overall)) {
print(name)
i <- i + 1
}
i <- i + 1
i
i <- 1
for (name in names(cm_no_cutoff$overall)) {
print(name);
i <- i + 1
}
for (name in names(cm_no_cutoff$overall)) {
print(name)
i <- i + 1
}
for (name in names(cm_no_cutoff$overall)) {
print(name)
print("hep"); i <- i + 1
}
for (name in names(cm_no_cutoff$overall)) {
print(name);
print("hep"); i <- i + 1
}
for (name in names(cm_no_cutoff$overall)) {
print(name); print("hep"); i <- i + 1
}
for (name in names(cm_no_cutoff$overall)) {print(name); print("hep"); i <- i + 1}
for (name in names(cm_no_cutoff$overall)) {print(name)}
print(names(cm_no_cutoff$overall)
)
print(names(cm_no_cutoff$overall))[1]
print(names(cm_no_cutoff$overall))[2]
print(names(cm_no_cutoff$overall)[1])
print(names(cm_no_cutoff$overall)[2])
print(names(cm_no_cutoff$overall)[1:4])
for (name in names(cm_no_cutoff$overall)) {print("hep")}
for (name in c("fefe", "fgsf", "df") {print("hep")}
for (name in c("fefe", "fgsf", "df")) {print("hep")}
for (name in c("fefe", "fgsf", "df")) {"hep"}
for (name in c("fefe", "fgsf", "df")) {print(name)}
for (nae in c("fefe", "fgsf", "df")) {print(nae)}
debugSource('~/GitHub/Gradu/run_rf.R')
debugSource('~/GitHub/Gradu/run_rf_once.R')
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_two_responses_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
all_names
i
all_names
i
all_names
debugSource('~/GitHub/Gradu/run_rf.R')
debugSource('~/GitHub/Gradu/run_rf_once.R')
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_two_responses_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
all_names
matrices_no_cutoff[5]
list(matrices_no_cutoff[5])
list(matrices_no_cutoff[5])[1]
list(matrices_no_cutoff[5])[[1]]
list(matrices_no_cutoff[5])[[2]]
matrices_no_cutoff[5])[[1]]
matrices_no_cutoff[5][[1]]
matrices_no_cutoff[5][[2]]
matrices_no_cutoff[5][["byClass"]]
unlist(matrices_no_cutoff[5])
ggg <- unlist(matrices_no_cutoff[5])
names(ggg) <- all_names
ggg
ggg[1:10]
ggg[1:4]
cm_no_cutoff$mode
cm_no_cutoff$dots
cm_no_cutoff$overall
ggg[10:15]
ggg[16:20]
debugSource('~/GitHub/Gradu/run_rf.R')
source('~/GitHub/Gradu/convert_cm_to_df.R')
debugSource('~/GitHub/Gradu/run_rf.R')
debugSource('~/GitHub/Gradu/run_rf_once.R')
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_two_responses_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
cm_df
matrices_no_cutoff
matrices_no_cutoff[[set_no]] <- cm_df
matrices_no_cutoff
cm_df
identical(cm_df, matrices_no_cutoff[1])
identical(cm_df, matrices_no_cutoff[2])
set_no
cm_df
matrices_no_cutoff[2]
matrices_no_cutoff[[2]]
matrices_no_cutoff[[1]]
identical(cm_df, matrices_no_cutoff[[1]])
cm_df
matrices_no_cutoff[[2]] <- cm_df
matrices_no_cutoff
matrices_no_cutoff[[1]]
matrices_no_cutoff[[2]]
cm_df
debugSource('~/GitHub/Gradu/run_rf.R')
debugSource('~/GitHub/Gradu/run_rf_once.R')
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_two_responses_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
debugSource('~/GitHub/Gradu/aggregate_cm_dynamically.R')
debugSource('~/GitHub/Gradu/run_rf.R')
debugSource('~/GitHub/Gradu/run_rf_once.R')
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_two_responses_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
source('~/GitHub/Gradu/run_rf.R')
debugSource('~/GitHub/Gradu/aggregate_cm_dynamically.R')
source('~/GitHub/Gradu/run_rf.R')
source('~/GitHub/Gradu/run_rf_once.R)
source('~/GitHub/Gradu/run_rf_once.R")
debugSource('~/GitHub/Gradu/run_rf_once.R')
debugSource('~/GitHub/Gradu/run_rf.R')
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_two_responses_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
cm_list[1]
cm_list[[1]]
cm_list
print(cm_list)
names(cm_list)
is.null(cm_list)
length(cm_list)
dev.off()
sink()
cm_list[[1]]
length(cm)
nrow(cm)
length(cm_list)
df_cm_list <- data.frame(unlist(cm_list))
df_cm_list <- data.frame(matrix(unlist(cm_list)))
df_cm_list <- data.frame(as.matrix(unlist(cm_list)))
matrix(cm_list)
matrix(unlist(cm_list))
mapply(cm_list)
aggregated <- data.frame(cm_list[[1]])
aggregated
aggregated2 <- cbind(aggregated, cm_list[[2]])
aggregated2
lapply(X = aggregated2[2:10], FUN=ave)
lapply(X = aggregated2[2:10,], FUN=ave)
lapply(X = aggregated2[,2:10], FUN=ave)
lapply(X = aggregated2[2:10,1:2], FUN=ave)
aggregated2[1:10,]
lapply(X = aggregated2[2:10,], FUN=ave)
lapply(X = aggregated2[2:10,], FUN=function(x) {ave(x)}
)
lapply(X = aggregated2[2:10,], FUN=function(x) {ave(as.numeric(x))}
)
mapply(X = aggregated2[2:10,], FUN=function(x) {ave(as.numeric(x))})
lapply(X = t(aggregated2[2:10,]), FUN=function(x) {ave(as.numeric(x))})
t(aggregated2[2:10,])
aggregated2[2:10,]
ave(aggregated2[10,])
aggregated2[10,]
aggregated2[10,1]
as.numeric(aggregated2[10,])
as.numeric(as.vector(aggregated2[10,]))
as.numeric(as.character(aggregated2[10,]))
as.character(aggregated2[10,])
levels(aggregated2[10,])
levels(aggregated2[10,1])
mapply(aggregated2, FUN=as.numeric)
mapply(aggregated2, FUN=as.character)
mapply(aggregated2, FUN=as.numeric(as.character))
mapply(aggregated2, FUN=as.numeric(as.vector()))
mapply(aggregated2, FUN=as.numeric(as.vector)
)
mapply(aggregated2, FUN=as.numeric(as.character))
mapply(aggregated2, FUN=as.character)
mapply(aggregated2, FUN=as.double)
as.numeric(levels(aggregated2))
as.numeric(levels(aggregated2)[aggregated2])
levels(aggregated2)
aggregated2
levels(aggregated2[1,])
levels(aggregated2[10,])
aggregated2[10,]
aggregated2[10,1]
ave(c(6906,6946))
mean(c(6906,6946))
ave(67.1)
ave(67.1, 67,24)
ave(67.1, 67.77)
ave(c/67.1, 67.77)
mapply(aggregated2, FUN=function(x) {as.numeric(levels(x))})
aggregated2
mapply(aggregated2, FUN=function(x) {if (is.integer(x) {print(row.name(x)); as.numeric(levels(x))})
mapply(aggregated2, FUN=function(x) {if (is.integer(x) {print(row.name(x))}; as.numeric(levels(x))})
mapply(aggregated2, FUN=function(x) {if (is.integer(x) {print(row.name(x))} as.numeric(levels(x))})
mapply(aggregated2, FUN=function(x) {if (is.integer(x)) {print(row.name(x))}; as.numeric(levels(x))})
mapply(aggregated2, FUN=function(x) {if (is.numeric(x)) {print(row.name(x))}; as.numeric(levels(x))})
mapply(aggregated2, FUN=function(x) {if (is.numeric(any(x))) {print(row.name(x))}; as.numeric(levels(x))})
mapply(aggregated2, FUN=function(x) {if (as.numeric(as.character(x))})
mapply(aggregated2, FUN=function(x) {if (as.numeric(as.character(x)))})
mapply(aggregated2, FUN=function(x) {as.numeric(as.character(x)))})
mapply(aggregated2, FUN=function(x) {as.numeric(as.character(x))})
is.na(NaN)
is.na(NA)
is.integer(56.1)
is.integer(56.0)
is.atomic(56.1)
is.atomic(56.0)
is.wholenumber(2.1)
56.0%%1==1
56.0%%1==0
56.1%%1==0
mapply(aggregated2, FUN=function(x) {if (x%%1==0) {as.integer(x) } else {as.numeric(as.character(x))})
mapply(aggregated2, FUN=function(x) {if (x%%1==0) {as.integer(x) } else {as.numeric(as.character(x))}})
mapply(aggregated2, FUN=function(x) {if (as.numeric(x)%%1==0) {as.integer(x) } else {as.numeric(as.character(x))}})
mapply(aggregated2, FUN=function(x) {if (as.numeric(as.character(x))%%1==0) {as.integer(x) } else {as.numeric(as.character(x))}})
mapply(aggregated2, FUN=function(x) {if (x%%1==0) {as.integer(x) } else {as.numeric(as.character(x))}})
mapply(aggregated2, FUN=function(x) {if (all(x%%1==0)) {as.integer(x) } else {as.numeric(as.character(x))}})
mapply(aggregated2, FUN=function(x) {if (all(as.numeric(as.character(x%%1==0)))) {as.integer(x) } else {as.numeric(as.character(x))}})
mapply(aggregated2, FUN=function(x) {print(x); as.numeric(as.character(x))})
lapply(aggregated2, FUN=function(x) {print(x); as.numeric(as.character(x))})
tapply(aggregated2, FUN=function(x) {print(x); as.numeric(as.character(x))})
table(aggregated2)
table(aggregated2)[1:10,]
for (ro in row(aggregated2)) {print(row)}
for (ro in row(aggregated2)) {print(ro)}
for (ro in 1:nrow(aggregated2)) {print(ro)}
for (ro in 1:nrow(aggregated2)) {print(aggregated2[ro])}
for (ro in 1:nrow(aggregated2)) {print(aggregated2[ro,])}
sink()
dev.off
dev.off()
for (ro in 1:nrow(aggregated2)) {print(ro)}
source('~/GitHub/Gradu/convert_cm_to_df.R')
debugSource('~/GitHub/Gradu/aggregate_cm_dynamically.R')
debugSource('~/GitHub/Gradu/run_rf.R')
debugSource('~/GitHub/Gradu/run_rf_once.R')
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_two_responses_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
typeof(aggregated[1,1])
print(typeof(aggregated[1,1]))
sink()
print(typeof(aggregated[1,1]))
aggregated
as.integer("sens")
as.numeric("sens")
try(as.numeric(("sens"))
)
try(as.numeric("sens"))
try(as.numeric("sens"),silent = TRUE)
try(as.numeric("sens"),silent = FALSE)
tryCatch(as.numeric("sens"))
options(warn=-1)
try(as.numeric("sens"),silent = FALSE)
options(warn=1)
try(as.numeric("sens"),silent = FALSE)
options(warn=0)
try(as.numeric("sens"),silent = FALSE)
as.numeric(c("df", "3"))
is.na(as.numeric(c("df", "3")))
any(is.na(as.numeric(c("df", "3"))))
c(56.0, 57.0)%%1==0
all(c(56.0, 57.0)%%1==0)
all(c("56.0", "57.0")%%1==0)
all(as.numeric(c("56.0", "57.0"))%%1==0)
all(as.numeric(c("56.0", "57.1"))%%1==0)
source('~/GitHub/Gradu/aggregate_cm_dynamically.R')
debugSource('~/GitHub/Gradu/aggregate_cm_dynamically.R')
debugSource('~/GitHub/Gradu/run_rf.R')
debugSource('~/GitHub/Gradu/run_rf_once.R')
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_two_responses_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
debugSource('~/GitHub/Gradu/aggregate_cm_dynamically.R')
debugSource('~/GitHub/Gradu/run_rf_once.R')
debugSource('~/GitHub/Gradu/run_rf.R')
debugSource('~/GitHub/Gradu/run_rf_once.R')
debugSource('~/GitHub/Gradu/aggregate_cm_dynamically.R')
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_two_responses_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
sink()
print(hep)
sink()
aggregated[1]
i <- 1
(any(is.na(as.numeric(aggregated[i,1]))))
(any(is.na(as.numeric(aggregated[i,]))))
for (i in 1:nrow(aggregated)) {
if (any(is.na(as.numeric(aggregated[i,])))) {
means[[i]] <- "NA"
} else if (all(as.numeric(aggregated[i,])%%1==0)) {
means[[i]] <- round(mean(unlist(aggregated[i,])))
} else {
means[[i]] <- as.numeric(mean(unlist(aggregated[i,])))
}
means
sink()
means
means[[1]]
i
nrow(aggregated)
means
means[[1]]
i
any(is.na(as.numeric(aggregated[1,])))
if (any(is.na(as.numeric(aggregated[i,])))) {
means[[i]] <- "NA"
}
debugSource('~/GitHub/Gradu/aggregate_cm_dynamically.R')
debugSource('~/GitHub/Gradu/run_rf.R')
debugSource('~/GitHub/Gradu/run_rf_once.R')
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_two_responses_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
means
sink()
means
unlist(means)
debugSource('~/GitHub/Gradu/aggregate_cm_dynamically.R')
debugSource('~/GitHub/Gradu/run_rf.R')
debugSource('~/GitHub/Gradu/run_rf_once.R')
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_two_responses_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
sink()
means
unlist(means)
aggregated[1:10,]
aggregated[11:20,]
source('~/GitHub/Gradu/aggregate_cm_dynamically.R')
debugSource('~/GitHub/Gradu/run_rf.R')
debugSource('~/GitHub/Gradu/run_rf_once.R')
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_two_responses_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
aggregated_results_no_cutoff
source('~/GitHub/Gradu/run_rf.R')
debugSource('~/GitHub/Gradu/run_rf_once.R')
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_three_responses_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
qqq
source('~/GitHub/Gradu/run_rf_once.R')
qqq <- run_rf_once(df=df_mod, features=feats_poetry25, filenamestem="poetry25_three_responses_whole_title_alt_ntree100_mtry5", ntree=100, mtry=5)
source('~/GitHub/Gradu/init.R')
source('~/GitHub/Gradu/run_caret_rf_once.R')
feats_poetry100 <- readRDS(paste0(bu_path, "/feats_poetry_whole_title_alt_100_20170531.RDS"))
responses_standard <- feats$is_poetry
feats_poetry100$is_poetry <- responses_standard
qqq <- run_caret_rf_once(df=df,
features=feats_poetry100,
filenamestem="poetry100caret_whole_title_alt_ntree250_mtry10_B",
ntree=250,
mtry=10,
get_pairwise_comparison = TRUE,
get_varImp = TRUE,
get_rfe = FALSE,
get_prediction = FALSE)
source('~/GitHub/Gradu/run_caret_rf_once.R')
qqq <- run_caret_rf_once(df=df,
features=feats_poetry100,
filenamestem="poetry100caret_whole_title_alt_ntree250_mtry10_B",
ntree=250,
mtry=10,
get_pairwise_comparison = TRUE,
get_varImp = TRUE,
get_rfe = FALSE,
get_prediction = FALSE)
unique(feats_poetry25$is_poetry)
unique(feats$is_poetry)
source("init.R")
unique(feats$is_poetry)
unique(df$is_poetry)
responses_standard <- df$is_poetry
feats_poetry25$is_poetry <- responses_standard
responses_standard <- df$is_poetry
feats_poetry25 <- readRDS(paste0(bu_path, "/feats_poetry_whole_title_alt_25_20170802.RDS"))
qqq <- run_caret_rf_once(df=df,
features=feats_poetry25,
filenamestem="poetry25caret_whole_title_alt_ntree250_mtry10_B",
ntree=250,
mtry=10,
get_pairwise_comparison = TRUE,
get_varImp = TRUE,
get_rfe = FALSE,
get_prediction = FALSE)
responses_fringe_prevails <- readRDS(paste0(bu_path, "/responses_fringe_prevails.RDS"))
length(responses_fringe_prevails)
df_mod <- df[which(!is.na(responses_hc_prevails)),]
nrow(df)
nrow(df_mod)
