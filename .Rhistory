group_names = c("without NLP", "with NLP1", "with NLP4", "with NLP7"),
outputfile = "QualificationNLPComparison",
main_title = "Basic, Bag-of-words and NLP bunches",
sub_title = "Mtry values 10, ntree 250",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1000,
space_between_bars = 0.15,
newschool = TRUE)
make_pic_comparison_bars(filepath=outputpath,
inputfile_patterns = c("basic_bow19_ntree250_mtry10_confusionMatrix_combined_no_cutoff.txt",
"basic_bow19_punctuation_ntree250_mtry10_confusionMatrix_combined_no_cutoff.txt",
"basic_bow19_antique_ntree250_mtry10_confusionMatrix_combined_no_cutoff.txt",
"basic_bow19_marc_ntree250_mtry10_confusionMatrix_combined_no_cutoff.txt",
"basic_bow19_nlp_ntree250_mtry10_confusionMatrix_combined_no_cutoff.txt") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("no additions", "with punctuation", "with antique", "with MARC", "with NLP"),
outputfile = "Basic_Bow19_and additions",
main_title = "Features: Basic, Bag-of-words19 and additions",
sub_title = "Mtry values 10, ntree 250",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1000,
space_between_bars = 0.15,
newschool = TRUE)
feats_basic_bow19_punctuation <- readRDS(paste0(bu_path, "/features_punctuation_20170926.RDS"))
feats_basic_bow19 <- readRDS(paste0(bu_path, "/features_basic_bow19.RDS"))
feats_basic_bow19$is_poetry <- NULL
feats_basic_bow19$no_of_commas <- NULL
feats_basic_bow19$no_of_exclamation_marks <- NULL
feats_basic_bow19$no_of_question_marks <- NULL
saveRDS(feats_basic_bow19, paste0(bu_path, "/features_basic_bow19_mod.RDS"))
feats_basic_bow19 <- readRDS(paste0(bu_path, "/features_basic_bow19_mod.RDS"))
feats_basic_bow19_punctuation <- cbind(feats_basic_bow19, feats_basic_bow19_punctuation)
names(feats_basic_bow19_punctuation)
make_pic_comparison_bars(filepath=outputpath,
inputfile_patterns = c("pos_caret_whole_title_ntree250_mtry10__measures.txt",
"pos_trigrams_caret_whole_title_ntree250_mtry10__measures.txt",
"nlp_caret_ntree250_mtry4__measures.txt",
"poetry100caret_whole_title_alt_ntree250_mtry10_B__measures.txt",
"topic100_caret_ntree250_mtry10__measures.txt") ,
parameter_names = c("H", "Precision", "Recall", "F"),
group_names = c("POS tags", "POS trigrams", "Dependency relation", "Poetry100", "Topic"),
outputfile = "QualificationComparison",
main_title = "Comparison of different predictor sets",
sub_title = "Mtry values 10, ntree 250, except for dependency relations mtry=4",
x_title = "",
y_title = "",
legend_labels = c("H", "Precision", "Recall", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width = 1000,
space_between_bars = 0.15)
make_pic_comparison_bars(filepath=outputpath,
inputfile_patterns = c("basic_bow19_ntree250_mtry10_confusionMatrix_combined_no_cutoff.txt",
"basic_bow19_nlp1_ntree250_mtry10_confusionMatrix_combined_no_cutoff.txt",
"basic_bow19_nlp4_ntree250_mtry10_confusionMatrix_combined_no_cutoff.txt",
"basic_bow19_nlp_ntree250_mtry10_confusionMatrix_combined_no_cutoff.txt") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("without NLP", "with NLP1", "with NLP4", "with NLP7"),
outputfile = "QualificationNLPComparison",
main_title = "Basic, Bag-of-words and NLP bunches",
sub_title = "Mtry values 10, ntree 250",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1000,
space_between_bars = 0.15,
newschool = TRUE)
make_pic_comparison_bars(filepath=outputpath,
inputfile_patterns = c("basic_bow19_ntree250_mtry10_confusionMatrix_combined_no_cutoff.txt",
"basic_bow19_punctuation_ntree250_mtry10_confusionMatrix_combined_no_cutoff.txt",
"basic_bow19_antique_ntree250_mtry10_confusionMatrix_combined_no_cutoff.txt",
"basic_bow19_marc_ntree250_mtry10_confusionMatrix_combined_no_cutoff.txt",
"basic_bow19_nlp_ntree250_mtry10_confusionMatrix_combined_no_cutoff.txt") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("no additions", "with punctuation", "with antique", "with MARC", "with NLP"),
outputfile = "Basic_Bow19_and additions",
main_title = "Features: Basic, Bag-of-words19 and additions",
sub_title = "Mtry values 10, ntree 250",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1000,
space_between_bars = 0.15,
newschool = TRUE)
source('~/GitHub/Gradu/make_all_pics.R')
filepath <- outputpath
filenamestem <- "basic_bow19_nlp"
qqq <- read.csv2(file = paste0(filepath, "/", filenamestem),
header = TRUE,
quote = "",
sep = "",
stringsAsFactors = FALSE,
row.names = 1
)
qqq <- read.csv2(file = paste0(filepath, "/", filenamestem, "caret_ntree250_mtry10__variable_importance_caret.txt"),
header = TRUE,
quote = "",
sep = "",
stringsAsFactors = FALSE,
row.names = 1
)
qqq <- read.csv2(file = paste0(filepath, "/", filenamestem, "caret_ntree250_mtry10_variable_importance_caret.txt"),
header = TRUE,
quote = "",
sep = "",
stringsAsFactors = FALSE,
row.names = 1
)
qqq <- read.csv2(file = paste0(filepath, "/", filenamestem, "_caret_ntree250_mtry10__variable_importance_caret.txt"),
header = TRUE,
quote = "",
sep = "",
stringsAsFactors = FALSE,
row.names = 1
)
paste0(filepath, "/", filenamestem, "_caret_ntree250_mtry10__variable_importance_caret.txt"
)
qqq <- read.csv2(file = paste0(filepath, "/", filenamestem, "_ntree250_mtry10__variable_importance_caret.txt"),
header = TRUE,
quote = "",
sep = "",
stringsAsFactors = FALSE,
row.names = 1
)
paste0(filepath, "/", filenamestem, "_caret_ntree250_mtry10__variable_importance_caret.txt"
)
filenamestem <- "basic_bow19_punctuation"
qqq <- read.csv2(file = paste0(filepath, "/", filenamestem, "_ntree250_mtry10__variable_importance_caret.txt"),
header = TRUE,
quote = "",
sep = "",
stringsAsFactors = FALSE,
row.names = 1
)
qqq <- read.csv2(file = paste0(filepath, "/", filenamestem, "_caret_ntree250_mtry10__variable_importance_caret.txt"),
header = TRUE,
quote = "",
sep = "",
stringsAsFactors = FALSE,
row.names = 1
)
qqq
qqq$NONPOETRY[1]
qqq[[1]]
row.names(qqq)
caret_importance <- sort(as.integer(qqq[1]))
caret_importance <- sort(as.numeric(qqq[1]))
qqqq[1]
qqq[1]
qqq[[1]]
caret_importance <- sort(as.numeric(qqq[[1]]))
caret_importance
row.names(caret_importance)
caret_importance <- row.names(sort(as.numeric(qqq[[1]])))
caret_importance
df_qqq <- data.frame(qqq, stringsAsFactors = FALSE)
df_qqq
df_qqq$rank <- NA
df_qqq$rank <- NULL
order.scores <- order(df_qqq$NONPOETRY, row_names(df_qqq))
order.scores <- order(df_qqq$NONPOETRY, row.names(df_qqq))
order.scores
df_qqq$caret_rank[order.scores] <- 1:nrow(df_qqq)
df_qqq
measures <- data.frame(stringsAsFactors = FALSE)
measures
tmp <- read.csv2(file = paste0(filepath, "/", filenamestem, "_caret_ntree250_mtry10__variable_importance_conditional.txt"),
header = TRUE,
quote = "",
sep = "",
stringsAsFactors = FALSE,
row.names = 1
)
df_tmp$conditional_rank <- NA
df_tmp <- data.frame(tmp, stringsAsFactors = FALSE)
df_tmp$conditional_rank <- NA
order.scores <- order(df_tmp$NONPOETRY, row.names(df_tmp))
order.scores <- order(df_tmp$conditional_importance, row.names(df_tmp))
df_tmp$caret_rank[order.scores] <- 1:nrow(df_tmp)
df_tmp
meas <- rbind(measures, df_tmp)
meas
meas <- rbind(measures, df_tmp$conditional_rank)
meas
meas <- cbind(measures, df_tmp$conditional_rank)
measures$conditional_rank <- df_tmp$conditional_rank
df_tmp$conditional_rank[order.scores] <- 1:nrow(df_tmp)
measures$conditional_rank <- df_tmp$conditional_rank
df_tmp
names(df_tmp)
names(measures)
measures
tmp <- read.csv2(file = paste0(filepath, "/", filenamestem, "_caret_ntree250_mtry10__variable_importance_caret.txt"),
header = TRUE,
quote = "",
sep = "",
stringsAsFactors = FALSE,
row.names = 1
)
df_tmp <- data.frame(tmp, stringsAsFactors = FALSE)
df_tmp$caret_rank <- NA
order.scores <- order(df_tmp$NONPOETRY, row.names(df_tmp))
df_tmp$caret_rank[order.scores] <- 1:nrow(df_tmp)
measures <- df_tmp
tmp <- read.csv2(file = paste0(filepath, "/", filenamestem, "_caret_ntree250_mtry10__variable_importance_conditional.txt"),
header = TRUE,
quote = "",
sep = "",
stringsAsFactors = FALSE,
row.names = 1
)
df_tmp <- data.frame(tmp, stringsAsFactors = FALSE)
df_tmp$conditional_rank <- NA
order.scores <- order(df_tmp$conditional_importance, row.names(df_tmp))
df_tmp$conditional_rank[order.scores] <- 1:nrow(df_tmp)
measures$conditional_rank <- df_tmp$conditional_rank
measures
names(measures)
tmp <- read.csv2(file = paste0(filepath, "/", filenamestem, "_caret_ntree250_mtry10__variable_importance_randomForest_no_cut.txt"),
header = TRUE,
quote = "",
sep = "",
stringsAsFactors = FALSE,
row.names = 1
)
df_tmp <- data.frame(tmp, stringsAsFactors = FALSE)
source('~/GitHub/Gradu/get_varimp_ranks.R')
qqq <- get_varimp_ranks(filepath = outputpath, filenamestem = "basic_bow19_punctuation")
qqq
debugSource('~/GitHub/Gradu/get_varimp_ranks.R')
qqq <- get_varimp_ranks(filepath = outputpath, filenamestem = "basic_bow19_punctuation")
df_tmp
thresholds[1]
which(df_tmp$NONPOETRY >= 0.00001)
which(df_tmp$NONPOETRY >= 0.15)
which(df_tmp$NONPOETRY >= 0.015)
source('~/GitHub/Gradu/get_varimp_ranks.R')
debugSource('~/GitHub/Gradu/get_varimp_ranks.R')
qqq <- get_varimp_ranks(filepath = outputpath, filenamestem = "basic_bow19_punctuation")
measures
debugSource('~/GitHub/Gradu/get_varimp_ranks.R')
qqq <- get_varimp_ranks(filepath = outputpath, filenamestem = "basic_bow19_punctuation")
measures
df_tmp
thresholds[3]
which(df_tmp$NONPOETRY > 1000)
df_tmp$NONPOETRY
which(as.integer(df_tmp$NONPOETRY) >= 100)
source('~/GitHub/Gradu/get_varimp_ranks.R')
qqq <- get_varimp_ranks(filepath = outputpath, filenamestem = "basic_bow19_punctuation")
source('~/GitHub/Gradu/get_varimp_ranks.R')
qqq <- get_varimp_ranks(filepath = outputpath, filenamestem = "basic_bow19_punctuation")
source('~/GitHub/Gradu/get_varimp_ranks.R')
qqq <- get_varimp_ranks(filepath = outputpath, filenamestem = "basic_bow19_punctuation")
source('~/GitHub/Gradu/get_varimp_ranks.R')
qqq <- get_varimp_ranks(filepath = outputpath, filenamestem = "basic_bow19_punctuation")
source('~/GitHub/Gradu/get_varimp_ranks.R')
qqq <- get_varimp_ranks(filepath = outputpath, filenamestem = "basic_bow19_punctuation")
names(feats_basic)
feats_basic$[1:4,1:4]
feats_basic[1:4,1:4]
feats_basic[1000:1010,1:4]
feats_basic[1000:1010,5:8]
feats_basic[1000:1010,9:12]
feats_basic[1000:1010,13:16]
df$whole_title_sans_edition[1005]
df$whole_title_sans_edition[1008]
feats_basic[1000:1010,17:20]
feats_basic[1000:1010,21:24]
feats_basic[1000:1010,25:28]
feats_basic[1000:1010,25:27]
tm::termFreq(c("Hege", "Hege", "Tyhmä", "Hege", "idiootti"))
tm::stopwords("en")
bibentry(tm)
citation(tm)
cite(tm)
library(tm)
cite(tm)
citation(tm)
citation(base)
citation("tm")
tm::stopwords("fi")
fr <- termFreq(df$whole_title_sans_edition[1000:1010])
fr
findMostFreqTerms(fr, n=5)
feats_basic$no_of_poetry_words[1000:1010]
feats_basic$no_of_poetry_words[1010:1020]
feats_basic$no_of_poetry_words[1015:1020]
feats_basic$no_of_poetry_words[1014:1015]
feats_basic$no_of_poetry_words_share50[1014:1015]
feats_basic$no_of_poetry_words_share50[1000:1020]
fr_all <- fr
fr_poetry <- fr[1:5]
fr_non_poetry <- fr[6:]
fr_non_poetry <- fr[6:length(fr)]
df.comp <- data.frame(word=names(fr_all), stringsAsFactors = FALSE)
df.comp$freq_all <- unname(fr_all)
df.poetry <- data.frame(word=names(fr_poetry), stringsAsFactors = FALSE)
df.poetry$freq_poetry <- unname(fr_poetry)
df.non_poetry <- data.frame(word=names(fr_non_poetry), stringsAsFactors = FALSE)
df.non_poetry$freq_non_poetry <- unname(fr_non_poetry)
df.non_poetry
df.comp
df.comp <- merge(df.comp, df.poetry, df.x="word", df.y="word", all=TRUE)
df.comp
df.comp <- merge(df.comp, df.non_poetry, df.x="word", df.y="word", all=TRUE)
df.comp
df.comp$poetry_share <- df.comp$freq_poetry / df.comp$freq_all
df.comp
feats_pos <- readRDS("C:/Users/Hege/Opiskelu/Kurssit/Gradu/feats_pos_whole_title_20170816.RDS")
names(feats_pos)
feats_basic[1000:1010, c(feats_basic$no_of_foreign_words, feats_basic$no_of_adverbs)]
feats_basic[1000:1010, c("feats_basic$no_of_foreign_words", "feats_basic$no_of_adverbs")]
feats_basic[1000:1010, c("no_of_foreign_words", "no_of_adverbs")]
df$tagged[1000:1010]
no_of_foreign_words <- str_count(df$tagged[1000:1010], "/RB")
no_of_foreign_words
no_of_foreign_words <- str_count(df$tagged[1000:1010], "/UH")
no_of_foreign_words
no_of_foreign_words <- str_count(df$tagged, "/UH")
length(which(no_of_foreign_words!=0))
no_of_foreign_words <- str_count(df$tagged, "/FW")
length(which(no_of_foreign_words!=0))
feats_basic <- readRDS(paste0(bu_path, "/features_basic_20170803.RDS"))
feats_basic$no_of_question_marks <- NULL
feats_basic$no_of_exclamation_marks < NULL
feats_basic$no_of_commas <- NULL
feats_basic$no_of_foreign_words <- str_count(df$tagged, "/FW")
saveRDS(feats_basic, paste0(bu_path, "/features_basic_20170929.RDS"))
names(feats_basic)
names(feats_basic) <- gsub("no_of_chars", "basic_chars", names(feats_basic))
names(feats_basic)
names(feats_basic) <- gsub("no_of_chars", "basic_chars", names(feats_basic))
names(feats_basic) <- gsub("no_of_verbs", "basic_verbs", names(feats_basic))
names(feats_basic) <- gsub("no_of_words", "basic_words", names(feats_basic))
names(feats_basic) <- gsub("no_of_adjectives", "basic_adjectives", names(feats_basic))
names(feats_basic) <- gsub("no_of_adverbs", "basic_adverbs", names(feats_basic))
names(feats_basic) <- gsub("no_of_foreign_words", "basic_foreign_words", names(feats_basic))
names(feats_basic) <- gsub("no_of_pronouns", "basic_pronouns", names(feats_basic))
names(feats_basic) <- gsub("no_of_proper_nouns", "basic_proper_nouns", names(feats_basic))
names(feats_basic) <- gsub("no_of_gerunds", "basic_gerunds", names(feats_basic))
names(feats_basic) <- gsub("title_only", "main_title", names(feats_basic))
names(feats_basic) <- gsub("no_of_verbs_past", "basic_verbs_past", names(feats_basic))
names(feats_basic) <- gsub("remainder", "subtitle", names(feats_basic))
names(feats_basic) <- gsub("len_words", "basic_word_length", names(feats_basic))
names(feats_basic) <- gsub("no_of_non_poetry_words", "basic_nonpoetry50", names(feats_basic))
names(feats_basic) <- gsub("no_of_poetry_words", "basic_poetry50", names(feats_basic))
names(feats_basic) <- gsub("no_of_non_poetry_words_share50", "basic_nonpoetry50_compared", names(feats_basic))
names(feats_basic) <- gsub("no_of_poetry_words_share50", "basic_poetry50_compared", names(feats_basic))
names(feats_basic) <- gsub("no_of_non_poetry_words_share100", "basic_nonpoetry100_compared", names(feats_basic))
names(feats_basic) <- gsub("no_of_poetry_words_share100", "basic_poetry100_compared", names(feats_basic))
names(feats_basic) <- gsub("no_of_exclamation_marks", "basic_exclamation", names(feats_basic))
names(feats_basic) <- gsub("no_of_common_words_share50", "basic_common_words", names(feats_basic))
names(feats_basic) <- gsub("no_of_question_marks", "basic_question", names(feats_basic))
names(feats_basic) <- gsub("no_of_sentences", "basic_sentences", names(feats_basic))
names(feats_basic)
names(feats_basic) <- gsub("no_of_common_words", "basic_common_words", names(feats_basic))
names(feats_basic) <- gsub("no_of_interjections", "basic_interjections", names(feats_basic))
names(feats_basic
)
saveRDS(feats_basic, paste0(bu_path, "/features_basic_20170929.RDS"))
feats_basic_bow19 <- readRDS(paste0(bu_path, "/bagofwords19.RDS"))
names(feats_basic_bow19)
feats_basic_bow19_punctuation <- readRDS(paste0(bu_path, "/features_punctuation_20170926.RDS"))
feats_basic_bow19 <- readRDS(paste0(bu_path, "/features_basic_bow19.RDS"))
feats_basic_bow19_punctuation$is_poetry <- NULL
feats_basic_bow19$no_of_commas <- NULL
feats_basic_bow19$no_of_exclamation_marks <- NULL
feats_basic_bow19$no_of_question_marks <- NULL
saveRDS(feats_basic_bow19, paste0(bu_path, "/features_basic_bow19_mod.RDS"))
saveRDS(feats_basic_bow19_punctuation, paste0(bu_path, "/features_punctuation_20170926.RDS"))
feats_basic <- readRDS(paste0(bu_path, "/features_basic_20170803.RDS"))
feats_basic$no_of_question_marks <- NULL
feats_basic$no_of_exclamation_marks < NULL
feats_basic$no_of_commas <- NULL
feats_basic$no_of_exclamation_marks <- NULL
feats_basic$no_of_commas <- NULL
feats_basic$no_of_foreign_words <- str_count(df$tagged, "/FW")
names(feats_basic) <- gsub("no_of_chars", "basic_chars", names(feats_basic))
names(feats_basic) <- gsub("no_of_words", "basic_words", names(feats_basic))
names(feats_basic) <- gsub("no_of_verbs", "basic_verbs", names(feats_basic))
names(feats_basic) <- gsub("no_of_adjectives", "basic_adjectives", names(feats_basic))
names(feats_basic) <- gsub("no_of_adverbs", "basic_adverbs", names(feats_basic))
names(feats_basic) <- gsub("no_of_foreign_words", "basic_foreign_words", names(feats_basic))
names(feats_basic) <- gsub("no_of_proper_nouns", "basic_proper_nouns", names(feats_basic))
names(feats_basic) <- gsub("no_of_pronouns", "basic_pronouns", names(feats_basic))
names(feats_basic) <- gsub("no_of_gerunds", "basic_gerunds", names(feats_basic))
names(feats_basic) <- gsub("no_of_verbs_past", "basic_verbs_past", names(feats_basic))
names(feats_basic) <- gsub("title_only", "main_title", names(feats_basic))
names(feats_basic) <- gsub("remainder", "subtitle", names(feats_basic))
names(feats_basic) <- gsub("len_words", "basic_word_length", names(feats_basic))
names(feats_basic) <- gsub("no_of_poetry_words", "basic_poetry50", names(feats_basic))
names(feats_basic) <- gsub("no_of_non_poetry_words", "basic_nonpoetry50", names(feats_basic))
names(feats_basic) <- gsub("no_of_poetry_words_share50", "basic_poetry50_compared", names(feats_basic))
names(feats_basic) <- gsub("no_of_non_poetry_words_share50", "basic_nonpoetry50_compared", names(feats_basic))
names(feats_basic) <- gsub("no_of_poetry_words_share100", "basic_poetry100_compared", names(feats_basic))
names(feats_basic) <- gsub("no_of_non_poetry_words_share100", "basic_nonpoetry100_compared", names(feats_basic))
names(feats_basic) <- gsub("no_of_common_words", "basic_common_words", names(feats_basic))
names(feats_basic) <- gsub("no_of_exclamation_marks", "basic_exclamation", names(feats_basic))
names(feats_basic) <- gsub("no_of_question_marks", "basic_question", names(feats_basic))
names(feats_basic) <- gsub("no_of_sentences", "basic_sentences", names(feats_basic))
names(feats_basic) <- gsub("no_of_interjections", "basic_interjections", names(feats_basic))
saveRDS(feats_basic, paste0(bu_path, "/features_basic_20170929.RDS"))
names(feats_basic)
feats_basic_bow19 <- readRDS(paste0(bu_path, "/bagofwords19.RDS"))
names(feats_basic_bow19)
names(feats_bow19) <- gsub("poetry_alt", "bow", names(feats_bow19))
feats_bow19 <- readRDS(paste0(bu_path, "/bagofwords19.RDS"))
names(feats_bow19) <- gsub("poetry_alt", "bow", names(feats_bow19))
names(feats_bow19)
saveRDS(paste0(bu_path, "/bagofwords19.RDS"))
saveRDS(feats_bow19, paste0(bu_path, "/bagofwords19.RDS"))
feats_basic_bow19_punctuation <- readRDS(paste0(bu_path, "/features_punctuation_20170926.RDS"))
names(feats_basic_bow19_punctuation)
feats_basic_bow19_punctuation <- readRDS(paste0(bu_path, "/features_punctuation_20170926.RDS"))
names(feats_punctuation) <- gsub("no_of", "punctuation", names(feats_punctuation))
saveRDS(feats_bow19, paste0(bu_path, "/features_punctuation_20170926.RDS"))
feats_punctuation <- readRDS(paste0(bu_path, "/features_punctuation_20170926.RDS"))
names(feats_punctuation) <- gsub("no_of", "punctuation", names(feats_punctuation))
saveRDS(feats_bow19, paste0(bu_path, "/features_punctuation_20170926.RDS"))
feats_marc <- readRDS(paste0(bu_path, "/features_marc_20170922.RDS"))
names(feats_marc)
names(feats_marc) <- paste0("marc_", names(feats_punctuation))
paste0("marc_", names(feats_punctuation))
names(feats_marc) <- paste0("marc_", names(feats_marc))
names(feats_marc)
names(feats_marc) <- gsub("physical_extent", "size", names(feats_marc))
names(feats_marc)
saveRDS(feats_marc, paste0(bu_path, "/features_marc_20170922.RDS"))
feats_NLP7 <- readRDS(paste0(bu_path, "/features_NLP_20170803b.RDS"))
names(feats_NLP7)
names(feats_NLP7) <- paste0("deprel_", names(feats_NLP))
names(feats_NLP7) <- paste0("deprel_", names(feats_NLP7))
names(feats_NLP7) <- paste0("deprel_", names(feats_NLP))
names(feats_NLP7) <- paste0("deprel_", names(feats_NLP7))
feats_NLP7 <- readRDS(paste0(bu_path, "/features_NLP_20170803b.RDS"))
names(feats_NLP7) <- paste0("deprel_", names(feats_NLP7))
names(feats_NLP7)
names(feats_NLP7) <- paste0("_x_", "_", names(feats_NLP7))
names(feats_NLP7) <- paste0("relative", "_", names(feats_NLP7))
names(feats_NLP7)
feats_NLP7 <- readRDS(paste0(bu_path, "/features_NLP_20170803b.RDS"))
names(feats_NLP7) <- paste0("deprel_", names(feats_NLP7))
names(feats_NLP7) <- gsub("_x_", "_", names(feats_NLP7))
names(feats_NLP7) <- gsub("relative", "_", names(feats_NLP7))
names(feats_NLP7)
feats_NLP7 <- readRDS(paste0(bu_path, "/features_NLP_20170803b.RDS"))
names(feats_NLP7) <- paste0("deprel_", names(feats_NLP7))
names(feats_NLP7) <- gsub("_x_", "_", names(feats_NLP7))
names(feats_NLP7) <- gsub("_relative", "", names(feats_NLP7))
names(feats_NLP7)
names(feats_NLP7) <- gsub("_words$", "", names(feats_NLP7))
names(feats_NLP7)
names(feats_NLP7) <- gsub("deprel_is_poetry", "is_poetry", names(feats_NLP7))
names(feats_NLP7)
saveRDS(feats_NLP7, paste0(bu_path, "/features_NLP_20170803b.RDS"))
feats_antique <- readRDS(paste0(bu_path, "/antique_20170922.RDS"))
names(feats_antique) <- c("varia_antique")
names(feats_antique)
feats_antique <- readRDS(paste0(bu_path, "/antique_20170922.RDS"))
names(feats_antique) <- c("varia_antique")
names(feats_antique)
feats_antique <- readRDS(paste0(bu_path, "/antique_20170922.RDS"))
names(feats_antique)
feats_antique <- readRDS(paste0(bu_path, "/features_antique_20170922.RDS"))
names(feats_antique) <- c("varia_antique")
names(feats_antique)
feats_antique <- readRDS(paste0(bu_path, "/features_antique_20170922.RDS"))
names(feats_antique)
feats_antique <- readRDS(paste0(bu_path, "/features_antique_20170922.RDS"))
length(feats_antique)
feats_NLP1 <- data.frame(deprel_no_of_root=feats_NLP7$deprel_no_of_root)
saveRDS(feats_NLP1, paste0(bu_path, "/features_NLP1.RDS"))
feats_NLP4 <- feats_NLP[,c("deprel_no_of_root",
"deprel_no_of_inflected",
"deprel_no_of_dependents",
"deprel_root_offset_characters")]
feats_NLP4 <- feats_NLP7[,c("deprel_no_of_root",
"deprel_no_of_inflected",
"deprel_no_of_dependents",
"deprel_root_offset_characters")]
saveRDS(feats_NLP4, paste0(bu_path, "/features_NLP4.RDS"))
feats_NLP <- NULL
feats_NLP1  <- NULL
feats_NLP4 <- NULL
feats_pos_trigrams_whole_title <- readRDS(paste0(bu_path, "/features_pos_trigrams_whole_title_20170817.RDS"))
names(feats_pos_trigrams_whole_title)
names(feats_pos_trigrams_whole_title) <- paste0("pos3gram_", names(feats_pos_trigrams_whole_title))
feats_pos_title_only <- readRDS(paste0(bu_path, "/feats_pos_title_only_20170816.RDS"))
names(feats_pos_title_only)
feats_pos_title_only <- readRDS(paste0(bu_path, "/feats_pos_whole_title_20170816.RDS"))
names(feats_pos_title_only)
feats_topic100 <- readRDS(paste0(bu_path, "features_topic100.RDS"))
names(feats_topic100)
source('~/GitHub/Gradu/make_all_pics.R')
