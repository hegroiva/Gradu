source('~/GitHub/Gradu/make_pic_comparison_bars_multiclass.R', encoding = 'UTF-8')
debugSource('~/GitHub/Gradu/make_pic_comparison_bars_multiclass.R', encoding = 'UTF-8')
make_pic_comparison_bars_multiclass(filepath=outputpath,
inputfile_patterns = c("FINAL_hc_prevails1",
"FINAL_hc_prevails2",
"FINAL_fringe_prevails1",
"FINAL_fringe_prevails2") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("HC prevails", "HC prevails", "Fringe prevails", "Fringe prevails"),
outputfile = "FINAL_is_poetry_comparison",
main_title = "Features: final set, different poetry declaration",
sub_title = "",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1200,
space_between_bars = 0.15,
newschool = TRUE)
source('~/GitHub/Gradu/aggregate_cm_multiclass.R')
debugSource('~/GitHub/Gradu/make_pic_comparison_bars_multiclass.R', encoding = 'UTF-8')
source('~/GitHub/Gradu/aggregate_cm_multiclass.R')
make_pic_comparison_bars_multiclass(filepath=outputpath,
inputfile_patterns = c("FINAL_hc_prevails1",
"FINAL_hc_prevails2",
"FINAL_fringe_prevails1",
"FINAL_fringe_prevails2") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("HC prevails", "HC prevails", "Fringe prevails", "Fringe prevails"),
outputfile = "FINAL_is_poetry_comparison",
main_title = "Features: final set, different poetry declaration",
sub_title = "",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1200,
space_between_bars = 0.15,
newschool = TRUE)
debugSource('~/GitHub/Gradu/aggregate_cm_multiclass.R')
make_pic_comparison_bars_multiclass(filepath=outputpath,
inputfile_patterns = c("FINAL_hc_prevails1",
"FINAL_hc_prevails2",
"FINAL_fringe_prevails1",
"FINAL_fringe_prevails2") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("HC prevails", "HC prevails", "Fringe prevails", "Fringe prevails"),
outputfile = "FINAL_is_poetry_comparison",
main_title = "Features: final set, different poetry declaration",
sub_title = "",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1200,
space_between_bars = 0.15,
newschool = TRUE)
files
cm <- read.delim2(file=file,sep="", header=FALSE, colClasses = c("character", ""))
file
read.delim2(file=file, sep="", header=FALSE)
read.delim2(file=file, sep="", header=FALSE, colClasses = c("character", ""))
read.delim2(file=file, sep="", header=FALSE, colClasses = c("character", NULL))
source('~/GitHub/Gradu/aggregate_cm_multiclass.R')
debugSource('~/GitHub/Gradu/make_pic_comparison_bars_multiclass.R', encoding = 'UTF-8')
make_pic_comparison_bars_multiclass(filepath=outputpath,
inputfile_patterns = c("FINAL_hc_prevails1",
"FINAL_hc_prevails2",
"FINAL_fringe_prevails1",
"FINAL_fringe_prevails2") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("HC prevails", "HC prevails", "Fringe prevails", "Fringe prevails"),
outputfile = "FINAL_is_poetry_comparison",
main_title = "Features: final set, different poetry declaration",
sub_title = "",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1200,
space_between_bars = 0.15,
newschool = TRUE)
all_params
debugSource('~/GitHub/Gradu/make_pic_comparison_bars_multiclass.R', encoding = 'UTF-8')
make_pic_comparison_bars_multiclass(filepath=outputpath,
inputfile_patterns = c("FINAL_hc_prevails1",
"FINAL_hc_prevails2",
"FINAL_fringe_prevails1",
"FINAL_fringe_prevails2") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("HC prevails", "HC prevails", "Fringe prevails", "Fringe prevails"),
outputfile = "FINAL_is_poetry_comparison",
main_title = "Features: final set, different poetry declaration",
sub_title = "",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1200,
space_between_bars = 0.15,
newschool = TRUE)
data_long
ret[["patterns"]]
rets
calculate_multiclassifiers(ret$pattern$all_names)
calculate_multiclassifiers(ret$pattern$all_names, ret$pattern$all_values, c("fringe", "hardcore"))
calculate_multiclassifiers(rets$pattern$all_names, rets$pattern$all_values, c("fringe", "hardcore"))
vals <- calculate_multiclassifiers(rets$pattern$all_names, rets$pattern$all_values, c("fringe", "hardcore"))
t(vals)
debugSource('~/GitHub/Gradu/make_pic_comparison_bars.R', encoding = 'UTF-8')
make_pic_comparison_bars(filepath=outputpath,
inputfile_patterns = c("FINAL_split100",
"FINAL_svm",
"FINAL_PART",
"FINAL_C45",
"FINAL_naivebayes") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("random forest", "SVM", "PART", "C45", "Naive Bayes"),
outputfile = "FINAL_MethodComparison",
main_title = "Features: final set (optimized for random forest)",
sub_title = "",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1200,
space_between_bars = 0.15,
newschool = TRUE)
params
rets[["pattern"]]
params
parameter_names
params
debugSource('~/GitHub/Gradu/make_pic_comparison_bars_multiclass.R', encoding = 'UTF-8')
make_pic_comparison_bars_multiclass(filepath=outputpath,
inputfile_patterns = c("FINAL_hc_prevails1",
"FINAL_hc_prevails2",
"FINAL_fringe_prevails1",
"FINAL_fringe_prevails2") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("HC prevails", "HC prevails", "Fringe prevails", "Fringe prevails"),
outputfile = "FINAL_is_poetry_comparison",
main_title = "Features: final set, different poetry declaration",
sub_title = "",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1200,
space_between_bars = 0.15,
newschool = TRUE)
params
data_long
vals
rets[["pattrern"]]
rets[["pattern"]]
length(vals)
nrow(vals)
vals
length(rets[["pattern"]])
debugSource('~/GitHub/Gradu/make_pic_comparison_bars_multiclass.R', encoding = 'UTF-8')
make_pic_comparison_bars_multiclass(filepath=outputpath,
inputfile_patterns = c("FINAL_hc_prevails1",
"FINAL_hc_prevails2",
"FINAL_fringe_prevails1",
"FINAL_fringe_prevails2") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("HC prevails", "HC prevails", "Fringe prevails", "Fringe prevails"),
outputfile = "FINAL_is_poetry_comparison",
main_title = "Features: final set, different poetry declaration",
sub_title = "",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1200,
space_between_bars = 0.15,
newschool = TRUE)
debugSource('~/GitHub/Gradu/make_pic_comparison_bars_multiclass.R', encoding = 'UTF-8')
make_pic_comparison_bars_multiclass(filepath=outputpath,
inputfile_patterns = c("FINAL_hc_prevails1",
"FINAL_hc_prevails2",
"FINAL_fringe_prevails1",
"FINAL_fringe_prevails2") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("HC prevails", "HC prevails", "Fringe prevails", "Fringe prevails"),
outputfile = "FINAL_is_poetry_comparison",
main_title = "Features: final set, different poetry declaration",
sub_title = "",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1200,
space_between_bars = 0.15,
newschool = TRUE)
params
debugSource('~/GitHub/Gradu/make_pic_comparison_bars_multiclass.R', encoding = 'UTF-8')
make_pic_comparison_bars_multiclass(filepath=outputpath,
inputfile_patterns = c("FINAL_hc_prevails1",
"FINAL_hc_prevails2",
"FINAL_fringe_prevails1",
"FINAL_fringe_prevails2") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("HC prevails", "HC prevails", "Fringe prevails", "Fringe prevails"),
outputfile = "FINAL_is_poetry_comparison",
main_title = "Features: final set, different poetry declaration",
sub_title = "",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1200,
space_between_bars = 0.15,
newschool = TRUE)
debugSource('~/GitHub/Gradu/make_pic_comparison_bars_multiclass.R', encoding = 'UTF-8')
make_pic_comparison_bars_multiclass(filepath=outputpath,
inputfile_patterns = c("FINAL_hc_prevails1",
"FINAL_hc_prevails2",
"FINAL_fringe_prevails1",
"FINAL_fringe_prevails2") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("HC prevails", "HC prevails", "Fringe prevails", "Fringe prevails"),
outputfile = "FINAL_is_poetry_comparison",
main_title = "Features: final set, different poetry declaration",
sub_title = "",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1200,
space_between_bars = 0.15,
newschool = TRUE)
debugSource('~/GitHub/Gradu/make_pic_comparison_bars_multiclass.R', encoding = 'UTF-8')
make_pic_comparison_bars_multiclass(filepath=outputpath,
inputfile_patterns = c("FINAL_hc_prevails1",
"FINAL_hc_prevails2",
"FINAL_fringe_prevails1",
"FINAL_fringe_prevails2") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("HC prevails", "HC prevails", "Fringe prevails", "Fringe prevails"),
outputfile = "FINAL_is_poetry_comparison",
main_title = "Features: final set, different poetry declaration",
sub_title = "",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1200,
space_between_bars = 0.15,
newschool = TRUE)
make_pic_comparison_bars_multiclass(filepath=outputpath,
inputfile_patterns = c("FINAL_hc_prevails1",
"FINAL_hc_prevails2",
"FINAL_fringe_prevails1",
"FINAL_fringe_prevails2") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("HC prevails", "HC prevails", "Fringe prevails", "Fringe prevails"),
outputfile = "FINAL_is_poetry_comparison",
main_title = "Features: final set, different poetry declaration",
sub_title = "",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1200,
space_between_bars = 0.15,
newschool = TRUE)
matrix(ncol=4, nrow=1)
data.frame(matrix(ncol=4, nrow=1))
debugSource('~/GitHub/Gradu/make_pic_comparison_bars_multiclass.R', encoding = 'UTF-8')
make_pic_comparison_bars_multiclass(filepath=outputpath,
inputfile_patterns = c("FINAL_hc_prevails1",
"FINAL_hc_prevails2",
"FINAL_fringe_prevails1",
"FINAL_fringe_prevails2") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("HC prevails", "HC prevails", "Fringe prevails", "Fringe prevails"),
outputfile = "FINAL_is_poetry_comparison",
main_title = "Features: final set, different poetry declaration",
sub_title = "",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1200,
space_between_bars = 0.15,
newschool = TRUE)
p <- data.frame(matrix(ncol=4, nrow=1))
p <- data.frame(matrix(ncol=4, nrow=2))
debugSource('~/GitHub/Gradu/make_pic_comparison_bars_multiclass.R', encoding = 'UTF-8')
make_pic_comparison_bars_multiclass(filepath=outputpath,
inputfile_patterns = c("FINAL_hc_prevails1",
"FINAL_hc_prevails2",
"FINAL_fringe_prevails1",
"FINAL_fringe_prevails2") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("HC prevails", "HC prevails", "Fringe prevails", "Fringe prevails"),
outputfile = "FINAL_is_poetry_comparison",
main_title = "Features: final set, different poetry declaration",
sub_title = "",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1200,
space_between_bars = 0.15,
newschool = TRUE)
debugSource('~/GitHub/Gradu/make_pic_comparison_bars_multiclass.R', encoding = 'UTF-8')
make_pic_comparison_bars_multiclass(filepath=outputpath,
inputfile_patterns = c("FINAL_hc_prevails1",
"FINAL_hc_prevails2",
"FINAL_fringe_prevails1",
"FINAL_fringe_prevails2") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("HC prevails", "HC prevails", "Fringe prevails", "Fringe prevails"),
outputfile = "FINAL_is_poetry_comparison",
main_title = "Features: final set, different poetry declaration",
sub_title = "",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1200,
space_between_bars = 0.15,
newschool = TRUE)
debugSource('~/GitHub/Gradu/make_pic_comparison_bars_multiclass.R', encoding = 'UTF-8')
make_pic_comparison_bars_multiclass(filepath=outputpath,
inputfile_patterns = c("FINAL_hc_prevails1",
"FINAL_hc_prevails2",
"FINAL_fringe_prevails1",
"FINAL_fringe_prevails2") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("HC prevails", "HC prevails", "Fringe prevails", "Fringe prevails"),
outputfile = "FINAL_is_poetry_comparison",
main_title = "Features: final set, different poetry declaration",
sub_title = "",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1200,
space_between_bars = 0.15,
newschool = TRUE)
debugSource('~/GitHub/Gradu/make_pic_comparison_bars_multiclass.R', encoding = 'UTF-8')
make_pic_comparison_bars_multiclass(filepath=outputpath,
inputfile_patterns = c("FINAL_hc_prevails1",
"FINAL_hc_prevails2",
"FINAL_fringe_prevails1",
"FINAL_fringe_prevails2") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("HC prevails", "HC prevails", "Fringe prevails", "Fringe prevails"),
outputfile = "FINAL_is_poetry_comparison",
main_title = "Features: final set, different poetry declaration",
sub_title = "",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1200,
space_between_bars = 0.15,
newschool = TRUE)
params
all_params
df
df_kpl
data_long
source('~/GitHub/Gradu/make_pic_comparison_bars_multiclass.R', encoding = 'UTF-8')
make_pic_comparison_bars_multiclass(filepath=outputpath,
inputfile_patterns = c("FINAL_hc_prevails1",
"FINAL_hc_prevails2",
"FINAL_fringe_prevails1",
"FINAL_fringe_prevails2") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("HC prevails", "HC prevails", "Fringe prevails", "Fringe prevails"),
outputfile = "FINAL_is_poetry_comparison",
main_title = "Features: final set, different poetry declaration",
sub_title = "",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1200,
space_between_bars = 0.15,
newschool = TRUE)
debugSource('~/GitHub/Gradu/make_pic_comparison_bars_multiclass.R', encoding = 'UTF-8')
make_pic_comparison_bars_multiclass(filepath=outputpath,
inputfile_patterns = c("FINAL_hc_prevails1",
"FINAL_hc_prevails2",
"FINAL_fringe_prevails1",
"FINAL_fringe_prevails2") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("HC prevails", "HC prevails", "Fringe prevails", "Fringe prevails"),
outputfile = "FINAL_is_poetry_comparison",
main_title = "Features: final set, different poetry declaration",
sub_title = "",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1200,
space_between_bars = 0.15,
newschool = TRUE)
data_long
p <- ggplot(data=data_long, aes(x=x, y=percent, fill=a)) +
#geom_bar(stat="identity", position = "dodge", width = .9) +
geom_bar(stat="identity",
position = position_dodge(width = (space_between_bars + bar_width)),
width = bar_width) +
theme(legend.title=element_text(size=12, color="red"),
axis.title.x = element_text(size=18),
axis.title.y = element_text(size=18),
legend.text = element_text(size=14),
axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),
plot.title = element_text(size=20),
plot.subtitle = element_text(size=14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()
) +
geom_text(data=data_long,
aes(x=x, y=percent + 0.03 , group=a, label=as.character(percent)),
position=position_dodge(width = space_between_bars + bar_width)) +
#scale_fill_discrete("", labels=c("Fennica (printed anywhere)", "Kungliga (printed in Finland)", "In Kungliga, but not in Fennica")) +
scale_fill_discrete("", labels=legend_labels) +
scale_y_continuous(breaks = percent(seq(0, 1, 0.1), digits=0), limits=c(0,1)) +
labs(title=main_title, subtitle=sub_title,
x=x_title, y=y_title)
png(filename = paste0(outputpath, "/", outputfile, ".png"), width = total_width)
plot.new()
plot(p)
dev.off()
make_pic_comparison_bars_multiclass(filepath=outputpath,
inputfile_patterns = c("FINAL_hc_prevails1",
"FINAL_hc_prevails2",
"FINAL_fringe_prevails1",
"FINAL_fringe_prevails2") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("HC prevails", "HC prevails", "Fringe prevails", "Fringe prevails"),
outputfile = "FINAL_is_poetry_comparison",
main_title = "Features: final set, different poetry declaration",
sub_title = "",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1200,
space_between_bars = 0.15,
newschool = TRUE)
data_long
make_pic_comparison_bars_multiclass(filepath=outputpath,
inputfile_patterns = c("FINAL_hc_prevails1",
"FINAL_hc_prevails2",
"FINAL_fringe_prevails1",
"FINAL_fringe_prevails2") ,
parameter_names = c("precision", "recall", "balanced_accuracy", "F1"),
group_names = c("HC prevails1", "HC prevails2", "Fringe prevails1", "Fringe prevails2"),
outputfile = "FINAL_is_poetry_comparison",
main_title = "Features: final set, different poetry declaration",
sub_title = "",
x_title = "",
y_title = "",
legend_labels = c("Precision", "Recall", "Balanced accuracy", "F1"),
#x_tick_labels = c("Main title only", "Whole title"),
#x_tick_breaks = c(1,2),
legend_title_parentheses=c(""),
total_width=1200,
space_between_bars = 0.15,
newschool = TRUE)
